{% set version = "3.6.1" %}

package:
  name: pytables
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/t/tables/tables-{{ version }}.tar.gz
  sha256: 49a972b8a7c27a8a173aeb05f67acb45fe608b64cd8e9fa667c0962a60b71b49
  patches:
    - do_not_copy_dlls_into_package.patch
    - remove_dll_check.patch

build:
  number: 2
  entry_points:
    - pt2to3 = tables.scripts.pt2to3:main
    - ptdump = tables.scripts.ptdump:main
    - ptrepack = tables.scripts.ptrepack:main
    - pttree = tables.scripts.pttree:main
  skip: true  # [py<35]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # If blosc is not in the build environment, PyTables setup.py will work
    # around it by using it's own internal version of computational libraries
    # (see c-blosc/internal-complibs). These internal libraries may not match
    # the conda environment versions and may cause segfaults.
    - blosc
  host:
    - python
    - pip
    - cython
    - numpy
    - zlib
    - lzo  # [linux]
    - bzip2
    - hdf5
    - numexpr
    - blosc
  run:
    - python
    - six
    - {{ pin_compatible('numpy') }}
    - numexpr
    - hdf5
    - zlib
    - lzo  # [linux]
    - bzip2
    - blosc
    - mock

test:
  requires:
    - setuptools
    - mock
  commands:
    - pt2to3 -h
    - ptdump -h
    - ptrepack -h
    - pttree -h


about:
  home: http://www.pytables.org
  license: BSD 3-Clause
  license_file: LICENSE.txt
  summary: 'Brings together Python, HDF5 and NumPy to easily handle large amounts of data.'
  description: |
    PyTables is a package for managing hierarchical datasets and designed to
    efficiently and easily cope with extremely large amounts of data. PyTables
    is built on top of the HDF5 library, using the Python language and the
    NumPy package.
  doc_url: http://www.pytables.org/
  dev_url: https://github.com/PyTables

extra:
  recipe-maintainers:
    - msarahan
    - ocefpaf
    - tomkooij
    - scopatz
